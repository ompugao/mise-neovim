#!/usr/bin/env bash

install_neovim() {
  local version
  local install_path
  local concurrency
  version=$1
  install_path=$2
  concurrency=$(get_valid_concurrency "$3")

  echo "Install NeoVim version:${version}, path:${install_path}, build concurrency:${concurrency}"

  local tmp_download_dir
  if [ "${TMPDIR}" = "" ]; then
    tmp_download_dir=$(mktemp -d -t asdf_neovim_build_XXXXXX)
  else
    tmp_download_dir="${TMPDIR}"
  fi

  # path to the tar file
  local source_path
  source_path=$(get_download_file_path "${version}" "${tmp_download_dir}")
  echo "${source_path}"
  download_source_file "${version}" "${source_path}"

  # running this in subshell
  # we don't want to disturb current working dir
  (
    if ! type "tar" &> /dev/null; then
      echo "ERROR: tar not found"
      exit 1
    fi

    tar -xvf "${source_path}" -C "${tmp_download_dir}" || exit 1
    cd "${tmp_download_dir}/neovim-${version}"  || exit 1
    CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS=-DCMAKE_INSTALL_PREFIX=${install_path} make -j "${concurrency}"  || exit 1
    make install || exit 1
  )

  return
}

download_source_file() {
  local version
  local download_path
  local download_url
  version=$1
  download_path=$2
  download_url=$(get_download_url "${version}")

  curl -Lo "${download_path}" -C - "${download_url}"
  return
}


get_download_file_path() {
  local version
  local tmp_download_dir
  version=$1
  tmp_download_dir=$2

  echo "${tmp_download_dir}/vim-${version}.tar.gz"
  return
}

get_download_url() {
  local version
  version=$1

  if [[ "${version}" =~ ^[0-9]+\.* ]] ; then
    # if version is a release number, prepend v
    echo "https://github.com/neovim/neovim/archive/v${version}.tar.gz"
  else
    # otherwise it can be a branch name or commit sha
    echo "https://github.com/neovim/neovim/archive/${version}.tar.gz"
  fi
  return
}

get_valid_concurrency() {
  local concurrency
  concurrency=$1

  if [[ "${concurrency}" =~ ^[0-9]+$ ]]; then
    # number
    echo "${concurrency}"
  else
    # is not number
    echo "1"
  fi
  return
}

install_neovim "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}" "${ASDF_CONCURRENCY:-1}"
